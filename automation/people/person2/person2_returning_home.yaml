alias: 'Rob returning home'
initial_state: 'on'
trigger:
  - platform: event
    event_type: tasker_webhook
    event_data:
      who: person2
condition:
  condition: and
  conditions:
    - condition: state
      entity_id: input_boolean.adults_away
      state: 'off'
    - condition: state
      entity_id: input_boolean.person2_home
      state: 'off'
    # In, or leaving, the car
    - condition: template
      value_template: >-
        {{ 'BT Car' in trigger.event.data.what }}
    - condition: template
      value_template: >-
        {{ not is_state('device_tracker.person2_mobile_gps','not_home') }}
action:
  - service: automation.turn_off
    entity_id: automation.person2_returning_home
  - service: script.person2_traveltime
  # Wait 30 seconds for the update
  - delay: '00:00:30'
  - service: notify.logfile
    data_template:
      message: "SENDperson3 person2 should be home from {{ states('device_tracker.person2_mobile_gps') }} in around {%- set travel_time = states('sensor.person2s_time_to_home') %} {{ travel_time[0] }} to {{ travel_time[0] | int + 25 }} {{ travel_time[1] }}{{ state_attr('sensor.person2s_time_to_home','unit_of_measurement') }}"
